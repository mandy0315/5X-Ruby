# 題目1
def sort_array(list)
  # 方法一：迴圈 基數＋順序排列 - 入空陣列
  odd_num = []
  list.each do |x|
    odd_num << x if x.odd?
  end
  odd_num = odd_num.sort

  # 方法二：1.陣列選擇 基數＋順序排列 取出基數陣列
  # oddnum = list.select{ |x| x.odd? }.sort

  # 2.map每個陣列值 判斷 1.偶數 放入值 2.不是偶數 放入基數陣列依序取值 
  list.map{ |num|
    if num.even?
      num
    else
      odd_num.shift
    end
  }
end

p sort_array([7, 1])                          # 印出 [1, 7]
p sort_array([5, 8, 6, 3, 4])                 # 印出 [3, 8, 6, 5, 4]
p sort_array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])  # 印出 [1, 8, 3, 6, 5, 4, 7, 2, 9, 0]


# 題目2
DATA = {
  ".-" => "A", 
  "-..." => "B", 
  "-.-." => "C", 
  "-.." => "D", 
  "." => "E", 
  "..-." => "F", 
  "--." => "G", 
  "...." => "H", 
  ".." => "I", 
  ".---" => "J", 
  "-.-" => "K", 
  ".-.." => "L",
  "--" => "M", 
  "-." => "N", 
  "---" => "O",
  ".--." => "P", 
  "--.-" => "Q",
  ".-." => "R", 
  "..." => "S", 
  "-" => "T",
  "..-"  => "U", 
  "...-" => "V", 
  ".--"  => "W", 
  "-..-" => "X",
  "-.--" => "Y", 
  "--.." => "Z", 
  "-----" => "0", 
  ".----" => "1",
  "..---" => "2",
  "...--" => "3",
  "....-" => "4",
  "....." => "5",
  "-...." => "6",
  "--..." => "7",
  "---.." => "8",
  "----." => "9", 
  ".-.-.-" => ".", 
  "--..--" => ",", 
  ".----." => "!" 
}
def decoder(code)
  # 判斷 SOS
  if code == '...---...'
    "SOS"
  else
    # 字串轉陣列 針對兩個空白相隔結合
    words = code.split("  ")
    # map 針對陣列每個值取出進行運算 在對一個空白製作成陣列
    words.map{ |word|
      # 針對 一個空白的陣列-取值入資料庫 找字母.to_s 轉字串-字串結合陣列
      word.split(" ").map{ |x| DATA[x.to_s]}.join
    }.join(" ")
  end
end

puts decoder('.... . .-.. .-.. ---   ..... -..- .-. ..- -... -.--')  # 印出 HELLO 5XRUBY
puts decoder('...---...')                                            # 印出 SOS
puts decoder('... --- ...')                                          # 印出 SOS